{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app-routing.module.ts","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/list/hotelList.component.html","webpack:///./app/list/hotelList.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,gGAAgG,OAAO,ggE;;;;;;;;;;;;;;;;;ACA7D;AAO1C;IALA;QAME,UAAK,GAAG,wBAAwB,CAAC;IACnC,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,qFAAkC;SAEnC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACQ;AAcvD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACV,2DAAY;gBACZ,mEAAS;aACZ;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnBtB,8FAA8F,QAAQ,6B;;;;;;;;;;;;;;;;;ACA3D;AAO3C;IALA;QAMW,WAAM,GAAG;YACZ;gBACI,IAAI,EAAE,KAAK;gBACX,KAAK,EAAC,CAAC;aACV,EAAE;gBACC,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,CAAC;aACX,EAAE;gBACC,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,CAAC;aACX;SAAC,CAAC;IACX,CAAC;IAZY,SAAS;QALrB,+DAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,sGAAuC;SAE1C,CAAC;OACW,SAAS,CAYrB;IAAD,gBAAC;CAAA;AAZqB;;;;;;;;;;;;;ACPtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 offset-3\\\">\\r\\n        <h2>{{title}}</h2>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n        <h3>Upload Your File</h3>\\r\\n        <div class=\\\"card card-body bg-light p-2\\\">\\r\\n            <form asp-controller=\\\"Home\\\" asp-action=\\\"Index\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\r\\n                <div asp-validation-summary=\\\"All\\\"> </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label asp-for=\\\"FileToUpload\\\">File:</label>\\r\\n                    <input type=\\\"file\\\" name=\\\"FileToUpload\\\" class=\\\"form-control\\\" />\\r\\n                    <span asp-validation-for=\\\"FileToUpload\\\" class=\\\"text-danger\\\"></span>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label asp-for=\\\"FileToUpload\\\">File Format to Write: </label>\\r\\n                    <label class=\\\"radio-inline\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"SelectedFileStorageType\\\" value=\\\"1\\\" checked>Json\\r\\n                    </label>\\r\\n                    <label class=\\\"radio-inline\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"SelectedFileStorageType\\\" value=\\\"2\\\">XML\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label asp-for=\\\"FileToUpload\\\">Sort / Group Options: </label>\\r\\n                    <label class=\\\"radio-inline\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"SelectedSortGroup\\\" value=\\\"1\\\" checked>Grouping\\r\\n                    </label>\\r\\n                    <label class=\\\"radio-inline\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"SelectedSortGroup\\\" value=\\\"2\\\">Sorting\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-upload\\\"></i> Upload File</button>\\r\\n                    <div class=\\\"text-success\\\"></div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'case-study',\n  templateUrl:\"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Burgan Bank Case Study';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HotelList } from './list/hotelList.component';\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      HotelList\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let h of hotels\\\">{{h.name}}</li>\\r\\n    </ul>\\r\\n</div>\"","ï»¿import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"hotel-list\",\r\n    templateUrl: \"hotelList.component.html\",\r\n    styleUrls:[]\r\n})\r\nexport class HotelList {\r\n    public hotels = [\r\n        {\r\n            name: \"abc\",\r\n            stars:3\r\n        }, {\r\n            name: \"abc2\",\r\n            stars: 5\r\n        }, {\r\n            name: \"abc3\",\r\n            stars: 3\r\n        }];\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}